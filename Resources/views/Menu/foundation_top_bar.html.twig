{% extends 'knp_menu.html.twig' %}

{% block list %}
{% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
    {% import 'knp_menu.html.twig' as knp_menu %}
    <ul{{ knp_menu.attributes(listAttributes) }}>
        {{ block('children') }}
    </ul>
{% endif %}
{% endblock %}

{% block item %}
{% if item.displayed %}
{# building the class of the item #}
    {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
    {%- if matcher.isCurrent(item) %}
        {%- set classes = classes|merge(['active']) %}
    {%- endif %}
    {%- if item.hasChildren and item.displayChildren %}
        {%- set classes = classes|merge(['has-dropdown']) %}
    {%- endif %}
    {%- set attributes = item.attributes %}
    {%- if classes is not empty %}
        {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- endif %}
{# displaying the item #}
    {% import 'knp_menu.html.twig' as knp_menu %}
    <li{{ knp_menu.attributes(attributes) }}>
        {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
            {{ block('linkElement') }}
        {%- else %}
            <a href="#">{{ block('label') }}</a>
        {%- endif %}
{# render the list of children#}
        {%- set listAttributes = item.childrenAttributes|merge({'class': 'dropdown' }) %}
        {{ block('list') }}
    </li>
{% endif %}
{% endblock %}

{% block label %}
{% if options.allow_safe_labels and item.getExtra('safe_label', false) -%}
    {{ item.label|raw|trans({}, item.getExtra('translation_domain', 'messages')) }}
{%- else -%}
    {{ item.label|trans({}, item.getExtra('translation_domain', 'messages')) }}
{%- endif %}
{% endblock %}
